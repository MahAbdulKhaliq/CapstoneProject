@model IEnumerable<WorkoutRepository.Models.Exercise>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Exercises";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Exercises</h1>



<form asp-action="Index" method="get">
    <p>
        <input type="text" name="searchString" placeholder="Search exercise" value="@ViewBag.CurrentFilter" />
        Muscle Group: <select asp-for="@Model.FirstOrDefault().MuscleGroupId" asp-items="ViewBag.MuscleGroup">
            <option value="">All</option>
        </select>
        Primary Equipment: <select asp-for="@Model.FirstOrDefault().PrimaryEquipmentId" asp-items="ViewBag.PrimaryEquipment">
            <option value="">All</option>
        </select>
        <input type="submit" value="Search" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-primary">All Exercises</a>
    </p>
</form>

@{
    var userId = UserManager.GetUserId(User);
}

@if (SignInManager.IsSignedIn(User))
{
    bool isAdmin = User.IsInRole("Admin");
    var user = await UserManager.GetUserAsync(User);
    var userName = user.WebsiteUserName;

    @if (isAdmin)
    {
        <p>
            <a asp-action="Create" class="btn btn-primary">Create New</a>
            <a asp-area="" asp-controller="MuscleGroups" asp-action="Index" class="btn btn-primary">Manage Muscle Groups</a>
            <a asp-area="" asp-controller="PrimaryEquipments" asp-action="Index" class="btn btn-primary">Manage Primary Equipment</a>
        </p>
    }
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ImageResource)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MuscleGroup)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PrimaryEquipment)
            </th>
            <th>
                Ratings
            </th>
            <th>
                Favourite
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                <img src="~/images/@item.ImageResource" class="card-img-top" style="width: 100px" />
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MuscleGroup.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrimaryEquipment.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PositiveRatings)
                @Html.DisplayFor(modelItem => item.NegativeRatings)
            </td>
            <td>
                @if (!item.Favourited)
                {
                    <button id="button_@item.Id" class="btn btn-link far fa-heart" onclick="Fav(@item.Id, '@userId')"></button>
                }
                else
                {
                    <button id="button_@item.Id" class="btn btn-link fas fa-heart" onclick="UnFav(@item.Id, '@userId')"></button>
                }

            </td>
            <td>
                @if (SignInManager.IsSignedIn(User))
                {
                    bool isAdmin = User.IsInRole("Admin");
                    var user = await UserManager.GetUserAsync(User);
                    var userName = user.WebsiteUserName;

                    @if (isAdmin)
                    {
                        <p>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </p>
                    }
                }

            </td>
        </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    /**
     * Adds the exercise to favourites
     * 
     * param exerciseId The exercise ID
     * param userId The user ID
     */
    function Fav(exerciseId, userId) {

        let clickedButton = document.getElementById('button_' + exerciseId);

        if (userId == "") {
            alert("Please log in to favourite exercises.")
        } else {

            var url = '@Url.Action("_Fav", "Exercises")';


            $.ajax({
                url: url,
                type: 'POST',
                data: {
                    exerciseId: exerciseId,
                    userId: userId
                },
                success: function (data) {
                    // No errors
                    if (data.length == 0) {
                        clickedButton.classList.replace("far", "fas")
                        clickedButton.setAttribute("onClick", "UnFav(" + exerciseId + ", '" + userId + "')")
                    } else {
                        console.log(data)
                    }
                        
                },
                error: function (jqXHR) {
                    // Http status is not 200
                },
                complete: function (jqXHR, status) {
                    // Whether success or error, enters here
                }
            });
        }


    };

    /**
     * Removes the exercise from favourites
     *
     * param exerciseId The exercise ID
     * param userId The user ID
     */
    function UnFav(exerciseId, userId) {

        let clickedButton = document.getElementById('button_' + exerciseId);

        if (userId == "") {
            alert("Please log in to favourite exercises.")
        } else {

            var url = '@Url.Action("_UnFav", "Exercises")';

            $.ajax({
                url: url,
                type: 'POST',
                data: {
                    exerciseId: exerciseId,
                    userId: userId
                },
                success: function (data) {
                    // No errors
                    if (data.length == 0) {
                        clickedButton.classList.replace("fas", "far")
                        clickedButton.setAttribute("onClick", "Fav(" + exerciseId + ", '" + userId + "')")
                    } else {
                    }
                        
                },
                error: function (jqXHR) {
                    // Http status is not 200
                },
                complete: function (jqXHR, status) {
                    // Whether success or error,  enters here
                }
            });
        }
    };

</script>
